name: CD Production Pipeline
on:
  push:
    branches:
      - prod
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Kubernetes
        uses: Azure/setup-kubectl@v3
        
      - name: Set up Minikube
        uses: medyagh/setup-minikube@master
        
      - name: Configure Minikube
        run: |
          minikube start
          minikube addons enable ingress
          # Wait for ingress controller
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=180s
        
      - name: Create namespace
        run: |
          kubectl create namespace weather-app --dry-run=client -o yaml | kubectl apply -f -
        
      - name: Create secrets
        run: |
          echo "${{ secrets.WEATHER_API_KEY }}" | base64 > weather-api-key.txt
          kubectl create secret generic weather-secrets \
            --from-file=api-key=weather-api-key.txt \
            -n weather-app \
            --dry-run=client -o yaml | kubectl apply -f -
          rm weather-api-key.txt
        
      - name: Deploy core resources
        run: |
          # Apply everything except ingress first
          kubectl apply -f k8s/configmap.yaml -n weather-app
          kubectl apply -f k8s/service.yaml -n weather-app
          kubectl apply -f k8s/deployment.yaml -n weather-app
          kubectl apply -f k8s/persistent-volume.yaml -n weather-app
        
      - name: Deploy ingress
        run: |
          # Apply ingress after other resources are ready
          kubectl apply -f k8s/ingress.yaml -n weather-app
          
      - name: Wait for deployments
        run: |
          while ! kubectl get deployment -n weather-app backend-deployment -o jsonpath='{.status.availableReplicas}' | grep -q '2'; do
            echo "Waiting for backend deployment..."
            sleep 10
            kubectl get pods -n weather-app
          done
          while ! kubectl get deployment -n weather-app frontend-deployment -o jsonpath='{.status.availableReplicas}' | grep -q '2'; do
            echo "Waiting for frontend deployment..."
            sleep 10
            kubectl get pods -n weather-app
          done
          
      - name: Get deployment status
        run: |
          kubectl get deployments -n weather-app
          kubectl get pods -n weather-app

      - name: Get backend pod logs
        run: |
          kubectl logs -n weather-app backend-deployment-66cc6b7f5-d65ck  # Replace with actual pod name if different
          kubectl logs -n weather-app backend-deployment-66cc6b7f5-pg57s  # Replace with actual pod name if different
          
      - name: Get service URLs
        run: |
          minikube service list -n weather-app
